diff -r 3113b12136be xenserver/etc_xapi.d_plugins_vswitch-cfg-update
--- a/xenserver/etc_xapi.d_plugins_vswitch-cfg-update	Fri Sep 18 08:47:10 2009 +0100
+++ b/xenserver/etc_xapi.d_plugins_vswitch-cfg-update	Fri Sep 18 08:54:41 2009 +0100
@@ -21,10 +21,6 @@
 # TBD: - error handling needs to be improved.  Currently this can leave
 # TBD:   the system in a bad state if anything goes wrong.
 
-import logging
-log = logging.getLogger("vswitch-cfg-update")
-logging.basicConfig(filename="/var/log/vswitch-cfg-update.log", level=logging.DEBUG)
-
 import XenAPIPlugin
 import XenAPI
 import os
@@ -46,10 +42,8 @@
     pools = session.xenapi.pool.get_all()
     # We assume there is only ever one pool...
     if len(pools) == 0:
-        log.error("No pool for host.")
         raise XenAPIPlugin.Failure("NO_POOL_FOR_HOST", [])
     if len(pools) > 1:
-        log.error("More than one pool for host.")
         raise XenAPIPlugin.Failure("MORE_THAN_ONE_POOL_FOR_HOST", [])
     pool = session.xenapi.pool.get_record(pools[0])
     try:
@@ -58,28 +52,21 @@
         controller = ""
     currentController = vswitchCurrentController()
     if controller == "" and currentController != "":
-        log.debug("Removing controller configuration.")
         delete_cacert()
         removeControllerCfg()
         return "Successfully removed controller config"
     elif controller != currentController:
-        if len(controller) == 0:
-            log.debug("Setting controller to: %s" % (controller))
-        else:
-            log.debug("Changing controller from %s to %s" % (currentController, controller))
         delete_cacert()
         setControllerCfg(controller)
         return "Successfully set controller to " + controller
     else:
-        log.debug("No change to controller configuration required.")
-    return "No change to configuration"
+        return "No change to configuration"
         
 def vswitchCurrentController():
     controller = vswitchCfgQuery("mgmt.controller")
     if controller == "":
         return controller
     if len(controller) < 4 or controller[0:4] != "ssl:":
-        log.warning("Controller does not specify ssl connection type, returning entire string.")
         return controller
     else:
         return controller[4:]
@@ -117,8 +104,6 @@
            "--config-file=" + vswitchd_cfg_filename] + action_args
     exitcode = subprocess.call(cmd)
     if exitcode != 0:
-        log.error("ovs-cfg-mod failed with exit code "
-                  + str(exitcode) + " for " + repr(action_args))
         raise XenAPIPlugin.Failure("VSWITCH_CONFIG_MOD_FAILURE",
                                    [ str(exitcode) , str(action_args) ])
     vswitchReload()
@@ -126,7 +111,6 @@
 def vswitchReload():
     exitcode = subprocess.call(["/sbin/service", "vswitch", "reload"])
     if exitcode != 0:
-        log.error("vswitch reload failed with exit code " + str(exitcode))
         raise XenAPIPlugin.Failure("VSWITCH_CFG_RELOAD_FAILURE", [ str(exitcode) ])
     
 
