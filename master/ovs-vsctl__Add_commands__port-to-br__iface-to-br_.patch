From blp@nicira.com Thu Sep 10 23:25:11 2009
Received: from FTLPMAILMX02.citrite.net (10.9.154.224) by
	LONPMAILMX02.citrite.net (10.30.224.163) with Microsoft SMTP Server (TLS)
	id 8.1.393.1; Thu, 10 Sep 2009 23:25:11 +0100
Received: from SMTP02.CITRIX.COM (10.9.154.239) by FTLPMAILMX02.citrite.net
	(10.9.154.224) with Microsoft SMTP Server id 8.1.393.1; Thu, 10 Sep 2009
	18:25:09 -0400
Received: from mail.geoviz.com (HELO leadville.nicira.com)
	([209.172.104.10]) by SMTP02.CITRIX.COM with ESMTP; 10 Sep 2009 18:25:08
	-0400
Received: from hardrock.nicira.com ([172.16.0.20])	by leadville.nicira.com
	with esmtp (Exim 4.67)	(envelope-from <blp@nicira.com>)	id
	1Mls4c-0005vF-Dm; Thu, 10 Sep 2009 15:25:02 -0700
Received: from blp by hardrock.nicira.com with local (Exim 4.67)
	(envelope-from <blp@hardrock.nicira.com>)	id 1Mls4g-0004Ud-AJ; Thu, 10 Sep
	2009 15:25:06 -0700
From: Ben Pfaff <blp@nicira.com>
To: "jpettit@nicira.com" <jpettit@nicira.com>, Ian Campbell <Ian.Campbell@eu.citrix.com>
CC: Ben Pfaff <blp@nicira.com>
Date: Thu, 10 Sep 2009 23:24:50 +0100
Subject: [PATCH 5/6] ovs-vsctl: Add commands "port-to-br", "iface-to-br".
Thread-Topic: [PATCH 5/6] ovs-vsctl: Add commands "port-to-br",
	"iface-to-br".
Thread-Index: AcoyZY/Xic7X3hTHRcmZCP5Vr6vmvw==
Message-ID: <1252621491-17203-5-git-send-email-blp@nicira.com>
References: <1252621491-17203-1-git-send-email-blp@nicira.com>
In-Reply-To: <1252621491-17203-1-git-send-email-blp@nicira.com>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-Exchange-Organization-AuthSource: FTLPMAILMX02.citrite.net
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-sbrs: None
x-mesageid: 64739374
x-ironport-server: ftlpip02.citrite.net
x-remote-ip: 209.172.104.10
x-policy: $LOW_THROTTLE
x-ironport-anti-spam-filtered: true
x-ironport-anti-spam-result: AhkFAF8ZqUrRrGgK/2dsb2JhbACBU5UnyEiEGAU
x-ironport-av: E=Sophos;i="4.44,366,1249272000";   
	d="scan'208";a="64739374"
Content-Type: text/plain; charset="iso-8859-1"
MIME-Version: 1.0
X-Evolution-Source: imap://ianca@lonpmailmx01.citrite.net/
Content-Transfer-Encoding: 8bit

Requested by Justin, Ian.
---
 tests/ovs-vsctl.at       |   28 ++++++++++++++++++++++++++++
 utilities/ovs-vsctl.8.in |    8 ++++++++
 utilities/ovs-vsctl.in   |   22 +++++++++++++++++++++-
 3 files changed, 57 insertions(+), 1 deletions(-)

diff --git a/tests/ovs-vsctl.at b/tests/ovs-vsctl.at
index 1e49d59..676333c 100644
--- a/tests/ovs-vsctl.at
+++ b/tests/ovs-vsctl.at
@@ -1,10 +1,18 @@
 AT_BANNER([ovs-vsctl unit tests -- real bridges])
 
+dnl RUN_OVS_VSCTL(COMMAND, ...)
+dnl
+dnl Executes each ovs-vsctl COMMAND on a file named "conf" in the
+dnl current directory.  Creates "conf" if it does not already exist.
 m4_define([RUN_OVS_VSCTL],
   [: >> conf
 m4_foreach([command], [$@], [ovs-vsctl --no-reload --config=conf command
 ])])
 
+dnl CHECK_BRIDGES(BRIDGE, ...)
+dnl
+dnl Verifies that "ovs-vsctl list-br" prints the specified list of bridges,
+dnl which must be in alphabetical order.
 m4_define([CHECK_BRIDGES],
   [AT_CHECK(
      [RUN_OVS_VSCTL([list-br])],
@@ -14,18 +22,38 @@ m4_define([CHECK_BRIDGES],
    m4_foreach([port], [$@], [AT_CHECK([RUN_OVS_VSCTL([br-exists port])])])
    AT_CHECK([RUN_OVS_VSCTL([br-exists nonexistent])], [2])])
 
+dnl CHECK_PORTS(BRIDGE, PORT[, PORT...])
+dnl
+dnl Verifies that "ovs-vsctl list-ports BRIDGE" prints the specified
+dnl list of ports, which must be in alphabetical order.  Also checks
+dnl that "ovs-vsctl port-to-br" reports that each port is
+dnl in BRIDGE.
 m4_define([CHECK_PORTS],
   [AT_CHECK(
      [RUN_OVS_VSCTL([list-ports $1])],
      [0],
      [m4_foreach([port], m4_cdr($@), [port
+])])
+   m4_foreach(
+     [port], m4_cdr($@), 
+     [AT_CHECK([RUN_OVS_VSCTL([[port-to-br] port])], [0], [$1
 ])])])
 
+dnl CHECK_IFACES(BRIDGE, IFACE[, IFACE...])
+dnl
+dnl Verifies that "ovs-vsctl list-ifaces BRIDGE" prints the specified
+dnl list of ifaces, which must be in alphabetical order.  Also checks
+dnl that "ovs-vsctl iface-to-br" reports that each interface is
+dnl in BRIDGE.
 m4_define([CHECK_IFACES],
   [AT_CHECK(
      [RUN_OVS_VSCTL([list-ifaces $1])],
      [0],
      [m4_foreach([iface], m4_cdr($@), [iface
+])])
+   m4_foreach(
+     [iface], m4_cdr($@), 
+     [AT_CHECK([RUN_OVS_VSCTL([[iface-to-br] iface])], [0], [$1
 ])])])
 
 AT_SETUP([add-br a])
diff --git a/utilities/ovs-vsctl.8.in b/utilities/ovs-vsctl.8.in
index 461c5ab..adb11e9 100644
--- a/utilities/ovs-vsctl.8.in
+++ b/utilities/ovs-vsctl.8.in
@@ -147,6 +147,10 @@ interfaces must be named.
 .IP "\fBdel-port \fIbridge port\fR"
 Deletes \fBport\fR from \fIbridge\fR.
 .
+.IP "\fBport-to-br \fIport\fR"
+Prints the name of the bridge that contains \fIport\fR on standard
+output.
+.
 .SS "Interface Commands"
 .
 These commands examine the interfaces attached to an Open vSwitch
@@ -158,6 +162,10 @@ Lists all of the interfaces within \fIbridge\fR on standard output,
 one per line.  The local port \fIbridge\fR is not included in the
 list.
 .
+.IP "\fBiface-to-br \fIiface\fR"
+Prints the name of the bridge that contains \fIiface\fR on standard
+output.
+.
 .SH "EXIT STATUS"
 .IP "0"
 Successful program execution.
diff --git a/utilities/ovs-vsctl.in b/utilities/ovs-vsctl.in
index e59c747..c2086e4 100755
--- a/utilities/ovs-vsctl.in
+++ b/utilities/ovs-vsctl.in
@@ -281,10 +281,12 @@ Port commands:
   add-port BRIDGE PORT        add network device PORT to BRIDGE
   add-bond BRIDGE PORT IFACE...  add new bonded port PORT in BRIDGE from IFACES
   del-port BRIDGE PORT        delete PORT (which may be bonded) from BRIDGE
+  port-to-br PORT             print name of bridge that contains PORT
 A bond is considered to be a single port.
 
 Interface commands (a bond consists of multiple interfaces):
   list-ifaces BRIDGE          print the names of all the interfaces on BRIDGE
+  iface-to-br IFACE           print name of bridge that contains IFACE
 A bond is considered to consist of interfaces.
 
 General options:
@@ -400,6 +402,14 @@ def cmd_del_port(bridge, port):
     del_port(cfg, port)
     cfg_save(cfg, VSWITCHD_CONF)
 
+def cmd_port_to_br(port):
+    cfg = cfg_read(VSWITCHD_CONF)
+    for bridge, parent, vlan in get_bridge_info(cfg):
+        if port in get_bridge_ports(cfg, parent, vlan):
+            print bridge
+            return
+    raise Error("no port named %s" % port)
+
 def cmd_list_ifaces(bridge):
     cfg = cfg_read(VSWITCHD_CONF)
     parent, vlan = find_bridge(cfg, bridge)
@@ -407,6 +417,14 @@ def cmd_list_ifaces(bridge):
         if iface != bridge:
             print iface
 
+def cmd_iface_to_br(iface):
+    cfg = cfg_read(VSWITCHD_CONF)
+    for bridge, parent, vlan in get_bridge_info(cfg):
+        if iface in get_bridge_ifaces(cfg, parent, vlan):
+            print bridge
+            return
+    raise Error("no interface named %s" % iface)
+
 def main():
     # Parse command line.
     try:
@@ -454,7 +472,9 @@ def main():
                 'add-port': (cmd_add_port, 2),
                 'add-bond': (cmd_add_bond, lambda n: n >= 4),
                 'del-port': (cmd_del_port, 2),
-                'list-ifaces': (cmd_list_ifaces, 1)}
+                'port-to-br': (cmd_port_to_br, 1),
+                'list-ifaces': (cmd_list_ifaces, 1),
+                'iface-to-br': (cmd_iface_to_br, 1)}
     command = args[0]
     args = args[1:]
     if command not in commands:
-- 
1.6.3.3

