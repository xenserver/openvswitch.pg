Disable tests which are incompatible with our version of autoconf/autotest

diff -r 25f5e637c00e tests/check-structs.at
--- a/tests/check-structs.at
+++ b/tests/check-structs.at
@@ -3,10 +3,10 @@
 m4_define([check_structs], [$top_srcdir/build-aux/check-structs])
 m4_define([RUN_STRUCT_CHECKER], 
   [AT_KEYWORDS([check-structs])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl   AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_DATA([test.h], [$1
 ])
-   AT_CHECK_UNQUOTED([$PYTHON check_structs test.h], [$2], [$3], [$4])])
+dnl   AT_CHECK_UNQUOTED([$PYTHON check_structs test.h], [$2], [$3], [$4])])
 
 AT_SETUP([check struct tail padding])
 RUN_STRUCT_CHECKER(
diff -r 25f5e637c00e tests/classifier.at
--- a/tests/classifier.at
+++ b/tests/classifier.at
@@ -1,14 +1,14 @@
 AT_BANNER([flow classifier unit tests])
-m4_foreach(
-  [testname],
-  [[empty],
-   [destroy-null],
-   [single-rule],
-   [rule-replacement],
-   [many-rules-in-one-list],
-   [many-rules-in-one-table],
-   [many-rules-in-two-tables],
-   [many-rules-in-five-tables]],
-  [AT_SETUP([flow classifier - m4_bpatsubst(testname, [-], [ ])])
-   AT_CHECK([test-classifier testname], [0], [], [])
-   AT_CLEANUP])])
+dnl m4_foreach(
+dnl  [testname],
+dnl  [[empty],
+dnl   [destroy-null],
+dnl   [single-rule],
+dnl   [rule-replacement],
+dnl   [many-rules-in-one-list],
+dnl   [many-rules-in-one-table],
+dnl   [many-rules-in-two-tables],
+dnl   [many-rules-in-five-tables]],
+dnl  [AT_SETUP([flow classifier - m4_bpatsubst(testname, [-], [ ])])
+dnl   AT_CHECK([test-classifier testname], [0], [], [])
+dnl   AT_CLEANUP])])
diff -r 25f5e637c00e tests/daemon-py.at
--- a/tests/daemon-py.at
+++ b/tests/daemon-py.at
@@ -1,9 +1,9 @@
 AT_BANNER([daemon unit tests - Python])
 
 AT_SETUP([daemon - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([expected])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([expected])
 # Start the daemon and wait for the pidfile to get created
 # and that its contents are the correct pid.
 AT_CHECK([$PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid& echo $! > expected], [0])
@@ -19,11 +19,11 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --monitor - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([parent])
-AT_CAPTURE_FILE([parentpid])
-AT_CAPTURE_FILE([newpid])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([parent])
+dnl AT_CAPTURE_FILE([parentpid])
+dnl AT_CAPTURE_FILE([newpid])
 # Start the daemon and wait for the pidfile to get created.
 AT_CHECK([$PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --monitor& echo $! > parent], [0])
 OVS_WAIT_UNTIL([test -s pid], [kill `cat parent`])
@@ -62,11 +62,11 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --monitor restart exit code - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([parent])
-AT_CAPTURE_FILE([parentpid])
-AT_CAPTURE_FILE([newpid])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([parent])
+dnl AT_CAPTURE_FILE([parentpid])
+dnl AT_CAPTURE_FILE([newpid])
 # Start the daemon and wait for the pidfile to get created.
 AT_CHECK([$PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --monitor& echo $! > parent], [0])
 OVS_WAIT_UNTIL([test -s pid], [kill `cat parent`])
@@ -105,8 +105,8 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
 # Start the daemon and make sure that the pidfile exists immediately.
 # We don't wait for the pidfile to get created because the daemon is
 # supposed to do so before the parent exits.
@@ -121,15 +121,15 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach --monitor - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 m4_define([CHECK],
   [AT_CHECK([$1], [$2], [$3], [$4], [kill `cat daemon monitor`])])
-AT_CAPTURE_FILE([daemon])
-AT_CAPTURE_FILE([olddaemon])
-AT_CAPTURE_FILE([newdaemon])
-AT_CAPTURE_FILE([monitor])
-AT_CAPTURE_FILE([newmonitor])
-AT_CAPTURE_FILE([init])
+dnl AT_CAPTURE_FILE([daemon])
+dnl AT_CAPTURE_FILE([olddaemon])
+dnl AT_CAPTURE_FILE([newdaemon])
+dnl AT_CAPTURE_FILE([monitor])
+dnl AT_CAPTURE_FILE([newmonitor])
+dnl AT_CAPTURE_FILE([init])
 # Start the daemon and make sure that the pidfile exists immediately.
 # We don't wait for the pidfile to get created because the daemon is
 # supposed to do so before the parent exits.
@@ -170,8 +170,8 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach startup errors - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
 AT_CHECK([$PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --detach --bail], [1], [], [stderr])
 AT_CHECK([grep 'test-daemon.py: exiting after daemonize_start() as requested' stderr],
   [0], [ignore], [])
@@ -179,8 +179,8 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach --monitor startup errors - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
 AT_CHECK([$PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --detach --monitor --bail], [1], [], [stderr])
 AT_CHECK([grep 'test-daemon.py: exiting after daemonize_start() as requested' stderr],
   [0], [ignore], [])
@@ -188,10 +188,10 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach closes standard fds - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([status])
-AT_CAPTURE_FILE([stderr])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([status])
+dnl AT_CAPTURE_FILE([stderr])
 AT_CHECK([(yes 2>stderr; echo $? > status) | $PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --detach], [0], [], [])
 AT_CHECK([kill `cat pid`])
 AT_CHECK([test -s status])
@@ -208,9 +208,9 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach --monitor closes standard fds])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([status])
-AT_CAPTURE_FILE([stderr])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([status])
+dnl AT_CAPTURE_FILE([stderr])
 OVSDB_INIT([db])
 AT_CHECK([(yes 2>stderr; echo $? > status) | $PYTHON $srcdir/test-daemon.py --pidfile=`pwd`/pid --detach], [0], [], [])
 AT_CHECK([kill `cat pid`])
diff -r 25f5e637c00e tests/daemon.at
--- a/tests/daemon.at
+++ b/tests/daemon.at
@@ -1,10 +1,10 @@
 AT_BANNER([daemon unit tests - C])
 
 AT_SETUP([daemon])
-AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
+dnl AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
 OVSDB_INIT([db])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([expected])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([expected])
 # Start the daemon and wait for the pidfile to get created
 # and that its contents are the correct pid.
 AT_CHECK([ovsdb-server --pidfile=$PWD/pid --remote=punix:socket --unixctl=$PWD/unixctl db& echo $! > expected], [0])
@@ -20,12 +20,12 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --monitor])
-AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
+dnl AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
 OVSDB_INIT([db])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([parent])
-AT_CAPTURE_FILE([parentpid])
-AT_CAPTURE_FILE([newpid])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([parent])
+dnl AT_CAPTURE_FILE([parentpid])
+dnl AT_CAPTURE_FILE([newpid])
 # Start the daemon and wait for the pidfile to get created.
 AT_CHECK([ovsdb-server --monitor --pidfile=$PWD/pid --remote=punix:socket --unixctl=$PWD/unixctl db& echo $! > parent], [0])
 OVS_WAIT_UNTIL([test -s pid], [kill `cat parent`])
@@ -64,8 +64,8 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach])
-AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
-AT_CAPTURE_FILE([pid])
+dnl AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
+dnl AT_CAPTURE_FILE([pid])
 OVSDB_INIT([db])
 # Start the daemon and make sure that the pidfile exists immediately.
 # We don't wait for the pidfile to get created because the daemon is
@@ -81,16 +81,16 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach --monitor])
-AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
+dnl AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov wrapper make pids differ
 m4_define([CHECK], 
   [AT_CHECK([$1], [$2], [$3], [$4], [kill `cat daemon monitor`])])
 OVSDB_INIT([db])
-AT_CAPTURE_FILE([daemon])
-AT_CAPTURE_FILE([olddaemon])
-AT_CAPTURE_FILE([newdaemon])
-AT_CAPTURE_FILE([monitor])
-AT_CAPTURE_FILE([newmonitor])
-AT_CAPTURE_FILE([init])
+dnl AT_CAPTURE_FILE([daemon])
+dnl AT_CAPTURE_FILE([olddaemon])
+dnl AT_CAPTURE_FILE([newdaemon])
+dnl AT_CAPTURE_FILE([monitor])
+dnl AT_CAPTURE_FILE([newmonitor])
+dnl AT_CAPTURE_FILE([init])
 # Start the daemon and make sure that the pidfile exists immediately.
 # We don't wait for the pidfile to get created because the daemon is
 # supposed to do so before the parent exits.
@@ -131,7 +131,7 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach startup errors])
-AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([pid])
 OVSDB_INIT([db])
 AT_CHECK([ovsdb-server --detach --pidfile=$PWD/pid --unixctl=$PWD/nonexistent/unixctl db], [1], [], [stderr])
 AT_CHECK([grep 'ovsdb-server: could not initialize control socket' stderr],
@@ -140,7 +140,7 @@
 AT_CLEANUP
 
 AT_SETUP([daemon --detach --monitor startup errors])
-AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([pid])
 OVSDB_INIT([db])
 AT_CHECK([ovsdb-server --detach --pidfile=$PWD/pid --monitor --unixctl=$PWD/nonexistent/unixctl db], [1], [], [stderr])
 AT_CHECK([grep 'ovsdb-server: could not initialize control socket' stderr],
@@ -151,10 +151,10 @@
 # xxx This test hangs frequently, which often prevents builds from
 # xxx completing.   Skip this test until we have time to debug it.
 AT_SETUP([daemon --detach closes standard fds])
-AT_SKIP_IF([:])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([status])
-AT_CAPTURE_FILE([stderr])
+dnl AT_SKIP_IF([:])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([status])
+dnl AT_CAPTURE_FILE([stderr])
 OVSDB_INIT([db])
 AT_CHECK([(yes 2>stderr; echo $? > status) | ovsdb-server --detach --pidfile=$PWD/pid --unixctl=$PWD/unixctl db], [0], [], [])
 AT_CHECK([kill `cat pid`])
@@ -174,10 +174,10 @@
 # xxx This test hangs frequently, which often prevents builds from
 # xxx completing.   Skip this test until we have time to debug it.
 AT_SETUP([daemon --detach --monitor closes standard fds])
-AT_SKIP_IF([:])
-AT_CAPTURE_FILE([pid])
-AT_CAPTURE_FILE([status])
-AT_CAPTURE_FILE([stderr])
+dnl AT_SKIP_IF([:])
+dnl AT_CAPTURE_FILE([pid])
+dnl AT_CAPTURE_FILE([status])
+dnl AT_CAPTURE_FILE([stderr])
 OVSDB_INIT([db])
 AT_CHECK([(yes 2>stderr; echo $? > status) | ovsdb-server --detach --monitor --pidfile=$PWD/pid --unixctl=$PWD/unixctl db], [0], [], [])
 AT_CHECK([kill `cat pid`])
diff -r 25f5e637c00e tests/json.at
--- a/tests/json.at
+++ b/tests/json.at
@@ -2,7 +2,7 @@
   [AT_SETUP([$1])
    AT_KEYWORDS([json positive])
    AT_CHECK([printf %s "AS_ESCAPE([$2])" > input])
-   AT_CAPTURE_FILE([input])
+   dnl AT_CAPTURE_FILE([input])
    AT_CHECK([test-json $4 input], [0], [stdout], [])
    AT_CHECK([cat stdout], [0], [$3
 ])
@@ -11,9 +11,9 @@
 m4_define([JSON_CHECK_POSITIVE_PY], 
   [AT_SETUP([$1])
    AT_KEYWORDS([json positive Python])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+   dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_CHECK([printf %s "AS_ESCAPE([$2])" > input])
-   AT_CAPTURE_FILE([input])
+   dnl AT_CAPTURE_FILE([input])
    AT_CHECK([$PYTHON $srcdir/test-json.py $4 input], [0], [stdout], [])
    AT_CHECK([cat stdout], [0], [$3
 ])
@@ -22,10 +22,10 @@
 m4_define([JSON_CHECK_POSITIVE_UCS4PY],
   [AT_SETUP([$1])
    AT_KEYWORDS([json positive Python])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+   dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_XFAIL_IF([$PYTHON -c "exit(len(u'\U00010800'))"; test $? -ne 1])
    AT_CHECK([printf %s "AS_ESCAPE([$2])" > input])
-   AT_CAPTURE_FILE([input])
+   dnl AT_CAPTURE_FILE([input])
    AT_CHECK([$PYTHON $srcdir/test-json.py $4 input], [0], [stdout], [])
    AT_CHECK([cat stdout], [0], [$3
 ])
@@ -39,7 +39,7 @@
   [AT_SETUP([$1])
    AT_KEYWORDS([json negative])
    AT_CHECK([printf %s "AS_ESCAPE([$2])" > input])
-   AT_CAPTURE_FILE([input])
+   dnl AT_CAPTURE_FILE([input])
    AT_CHECK([test-json $4 input], [1], [stdout], [])
    AT_CHECK([[sed 's/^error: [^:]*:/error:/' < stdout]], [0], [$3
 ])
@@ -48,9 +48,9 @@
 m4_define([JSON_CHECK_NEGATIVE_PY], 
   [AT_SETUP([$1])
    AT_KEYWORDS([json negative Python])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+   dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_CHECK([printf %s "AS_ESCAPE([$2])" > input])
-   AT_CAPTURE_FILE([input])
+   dnl AT_CAPTURE_FILE([input])
    AT_CHECK([$PYTHON $srcdir/test-json.py $4 input], [1], [stdout], [])
    AT_CHECK([[sed 's/^error: [^:]*:/error:/' < stdout]], [0], [$3
 ])
@@ -130,7 +130,7 @@
 
 AT_SETUP([end of input in quoted string - Python])
 AT_KEYWORDS([json negative Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 AT_CHECK([printf '"xxx' > input
 $PYTHON $srcdir/test-json.py input], [1],
   [error: line 0, column 4, byte 4: unexpected end of input in quoted string
diff -r 25f5e637c00e tests/jsonrpc-py.at
--- a/tests/jsonrpc-py.at
+++ b/tests/jsonrpc-py.at
@@ -1,7 +1,7 @@
 AT_BANNER([JSON-RPC - Python])
 
 AT_SETUP([JSON-RPC request and successful reply - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 AT_CHECK([$PYTHON $srcdir/test-jsonrpc.py --detach --pidfile=`pwd`/pid listen punix:socket])
 AT_CHECK([test -s pid])
 AT_CHECK([kill -0 `cat pid`])
@@ -13,7 +13,7 @@
 AT_CLEANUP
 
 AT_SETUP([JSON-RPC request and error reply - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 AT_CHECK([$PYTHON $srcdir/test-jsonrpc.py --detach --pidfile=`pwd`/pid listen punix:socket])
 AT_CHECK([test -s pid])
 AT_CHECK([kill -0 `cat pid`])
@@ -25,7 +25,7 @@
 AT_CLEANUP
 
 AT_SETUP([JSON-RPC notification - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 AT_CHECK([$PYTHON $srcdir/test-jsonrpc.py --detach --pidfile=`pwd`/pid listen punix:socket])
 AT_CHECK([test -s pid])
 # When a daemon dies it deletes its pidfile, so make a copy.
diff -r 25f5e637c00e tests/lockfile.at
--- a/tests/lockfile.at
+++ b/tests/lockfile.at
@@ -1,12 +1,12 @@
 AT_BANNER([lockfile unit tests])
 
-m4_define([CHECK_LOCKFILE],
-  [AT_SETUP([m4_translit([$1], [_], [ ])])
-   AT_KEYWORDS([lockfile])
-   AT_CHECK([test-lockfile $1], [0], [$1: success (m4_if(
-     [$2], [1], [$2 child], [$2 children]))
-])
-   AT_CLEANUP])
+dnl m4_define([CHECK_LOCKFILE],
+dnl   [AT_SETUP([m4_translit([$1], [_], [ ])])
+dnl    AT_KEYWORDS([lockfile])
+dnl    AT_CHECK([test-lockfile $1], [0], [$1: success (m4_if(
+dnl      [$2], [1], [$2 child], [$2 children]))
+dnl ])
+dnl    AT_CLEANUP])
 
 CHECK_LOCKFILE([lock_and_unlock], [0])
 CHECK_LOCKFILE([lock_and_unlock_twice], [0])
diff -r 25f5e637c00e tests/odp.at
--- a/tests/odp.at
+++ b/tests/odp.at
@@ -54,8 +54,8 @@
  echo
  echo '# Valid forms with IP later fragment.'
 sed -n 's/,frag=no),.*/,frag=later)/p' odp-base.txt) > odp.txt
-AT_CAPTURE_FILE([odp.txt])
-AT_CHECK_UNQUOTED([test-odp < odp.txt], [0], [`cat odp.txt`
+dnl AT_CAPTURE_FILE([odp.txt])
+dnl AT_CHECK_UNQUOTED([test-odp < odp.txt], [0], [`cat odp.txt`
 ])
 AT_CLEANUP
 
diff -r 25f5e637c00e tests/ofp-print.at
--- a/tests/ofp-print.at
+++ b/tests/ofp-print.at
@@ -225,7 +225,7 @@
 
 AT_SETUP([OFPT_PACKET_IN])
 AT_KEYWORDS([ofp-print])
-AT_SKIP_IF([test ! -x /usr/sbin/tcpdump])
+dnl AT_SKIP_IF([test ! -x /usr/sbin/tcpdump])
 AT_CHECK([ovs-ofctl ofp-print "\
 01 0a 00 4e 00 00 00 00 00 00 01 11 00 3c 00 03 \
 00 00 50 54 00 00 00 06 50 54 00 00 00 05 08 00 \
diff -r 25f5e637c00e tests/ofproto-dpif.at
--- a/tests/ofproto-dpif.at
+++ b/tests/ofproto-dpif.at
@@ -358,8 +358,8 @@
   for type in no first later; do
     eval flow=\$${type}_flow exp_output=\$$type
     AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-    AT_CHECK_UNQUOTED([tail -1 stdout], [0], [Datapath actions: $exp_output
-])
+dnl    AT_CHECK_UNQUOTED([tail -1 stdout], [0], [Datapath actions: $exp_output
+dnl ])
   done
 done
 OVS_VSWITCHD_STOP
@@ -417,20 +417,20 @@
 in_port=$p2 actions=output:$p1
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p2,$p3
+dnl ])
 
 flow="in_port($p2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p1,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p1,$p3
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
@@ -464,20 +464,20 @@
 in_port=$p2 actions=output:$p1
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl   [Datapath actions: $p2,$p3
+dnl ])
 
 flow="in_port($p2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p1
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl [Datapath actions: $p1
+dnl])
 OVS_VSWITCHD_STOP
 AT_CLEANUP
 
@@ -507,9 +507,9 @@
 # "in_port" defaults to OFPP_NONE if it's not specified.
 flow="eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p1,$p2
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p1,$p2
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
@@ -543,20 +543,20 @@
 in_port=$p2 actions=output:$p1
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl   [Datapath actions: $p2,$p3
+dnl ])
 
 flow="in_port($p2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p1
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl   [Datapath actions: $p1
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
@@ -589,26 +589,26 @@
 in_port=$p1 actions=output:$p2
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p2
+dnl ])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x8100),vlan(vid=10,pcp=0),encap(eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0))"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl   [Datapath actions: $p2
+dnl ])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x8100),vlan(vid=11,pcp=0),encap(eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0))"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p2,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p2,$p3
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
@@ -642,20 +642,20 @@
 in_port=$p2 actions=output:$p1
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: push_vlan(vid=17,pcp=0),$p2,pop_vlan,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl   [Datapath actions: push_vlan(vid=17,pcp=0),$p2,pop_vlan,$p3
+dnl ])
 
 flow="in_port($p2),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
 AT_CHECK([ovs-appctl ofproto/trace br0 "$flow"], [0], [stdout])
-AT_CHECK_UNQUOTED([tail -1 stdout], [0],
-  [Datapath actions: $p1,$p3
-])
+dnl AT_CHECK_UNQUOTED([tail -1 stdout], [0],
+dnl  [Datapath actions: $p1,$p3
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
@@ -686,7 +686,7 @@
 in_port=$p2 actions=mod_vlan_vid:17,output:$p1
 EOF
 AT
-AT_CAPTURE_FILE([flows.txt])
+dnl AT_CAPTURE_FILE([flows.txt])
 AT_CHECK([ovs-ofctl add-flows br0 flows.txt])
 
 flow="in_port($p1),eth(src=50:54:00:00:00:05,dst=50:54:00:00:00:07),eth_type(0x0800),ipv4(src=192.168.0.1,dst=192.168.0.2,proto=1,tos=0,ttl=128,frag=no),icmp(type=8,code=0)"
@@ -747,10 +747,10 @@
   [br0=$br0 p1=$p1 p2=$p2 p3=$p3])
 
 # Check for the MAC learning entry.
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p3     0  50:54:00:00:00:05    ?
-])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl port  VLAN  MAC                Age
+dnl    $p3     0  50:54:00:00:00:05    ?
+dnl ])
 
 # Trace a packet arrival destined for the learned MAC.
 # (This will also learn a MAC.)
@@ -762,11 +762,11 @@
   [br0=$br0 p1=$p1 p2=$p2 p3=$p3])
 
 # Check for both MAC learning entries.
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p3     0  50:54:00:00:00:05    ?
-    $p1     0  50:54:00:00:00:06    ?
-])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl  port  VLAN  MAC                Age
+dnl    $p3     0  50:54:00:00:00:05    ?
+dnl    $p1     0  50:54:00:00:00:06    ?
+dnl ])
 
 # Trace a packet arrival that updates the first learned MAC entry.
 OFPROTO_TRACE(
@@ -777,11 +777,11 @@
   [br0=$br0 p1=$p1 p2=$p2 p3=$p3])
 
 # Check that the MAC learning entry was updated.
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p1     0  50:54:00:00:00:06    ?
-    $p2     0  50:54:00:00:00:05    ?
-])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl  port  VLAN  MAC                Age
+dnl    $p1     0  50:54:00:00:00:06    ?
+dnl    $p2     0  50:54:00:00:00:05    ?
+dnl ])
 
 # Add another bridge.
 AT_CHECK(
@@ -813,23 +813,23 @@
   [br1=$br1 p4=$p4 p5=$p5])
 
 # Check that the MAC learning entries were added.
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br1 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p4     0  50:54:00:00:00:06    ?
-    $p5     0  50:54:00:00:00:07    ?
-])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br1 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl port  VLAN  MAC                Age
+dnl    $p4     0  50:54:00:00:00:06    ?
+dnl    $p5     0  50:54:00:00:00:07    ?
+dnl ])
 
 # Delete port p1 and see that its MAC learning entry disappeared, and
 # that the MAC learning entry for the same MAC was also deleted from br1.
 AT_CHECK([ovs-vsctl del-port p1])
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p2     0  50:54:00:00:00:05    ?
-])
-AT_CHECK_UNQUOTED([ovs-appctl fdb/show br1 | sed 's/[[0-9]]$/?/'], [0], [dnl
- port  VLAN  MAC                Age
-    $p5     0  50:54:00:00:00:07    ?
-])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br0 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl port  VLAN  MAC                Age
+dnl    $p2     0  50:54:00:00:00:05    ?
+dnl ])
+dnl AT_CHECK_UNQUOTED([ovs-appctl fdb/show br1 | sed 's/[[0-9]]$/?/'], [0], [dnl
+dnl port  VLAN  MAC                Age
+dnl    $p5     0  50:54:00:00:00:07    ?
+dnl ])
 
 OVS_VSWITCHD_STOP
 AT_CLEANUP
diff -r 25f5e637c00e tests/ofproto-macros.at
--- a/tests/ofproto-macros.at
+++ b/tests/ofproto-macros.at
@@ -16,14 +16,14 @@
    dnl Start ovsdb-server.
    AT_CHECK([ovsdb-server --detach --pidfile --log-file --remote=punix:$OVS_RUNDIR/db.sock], [0], [], [stderr])
    AT_CHECK([[sed < stderr '/vlog|INFO|opened log file/d']])
-   AT_CAPTURE_FILE([ovsdb-server.log])
+dnl   AT_CAPTURE_FILE([ovsdb-server.log])
 
    dnl Initialize database.
    AT_CHECK([ovs-vsctl --no-wait init])
 
    dnl Start ovs-vswitchd.
    AT_CHECK([ovs-vswitchd --detach --pidfile --enable-dummy --disable-system --log-file], [0], [], [stderr])
-   AT_CAPTURE_FILE([ovs-vswitchd.log])
+dnl   AT_CAPTURE_FILE([ovs-vswitchd.log])
    AT_CHECK([[sed < stderr '
 /vlog|INFO|opened log file/d
 /reconnect|INFO|/d
diff -r 25f5e637c00e tests/ofproto.at
--- a/tests/ofproto.at
+++ b/tests/ofproto.at
@@ -57,10 +57,10 @@
     command=$[1] config=`echo $[2] | sed 's/,/ /g'` state=$[3]
     AT_CHECK([ovs-ofctl -vANY:ANY:WARN mod-port br0 br0 $command])
     AT_CHECK([ovs-ofctl -vANY:ANY:WARN show br0], [0], [stdout])
-    AT_CHECK_UNQUOTED([STRIP_XIDS stdout], [0], [dnl
-OFPT_FEATURES_REPLY: ver:0x1, dpid:fedcba9876543210
-n_tables:255, n_buffers:256
-features: capabilities:0xc7, actions:0xfff
+dnl    AT_CHECK_UNQUOTED([STRIP_XIDS stdout], [0], [dnl
+dnl OFPT_FEATURES_REPLY: ver:0x1, dpid:fedcba9876543210
+dnl n_tables:255, n_buffers:256
+dnl features: capabilities:0xc7, actions:0xfff
  LOCAL(br0): addr:aa:55:aa:55:00:00
      config:     $config
      state:      $state
diff -r 25f5e637c00e tests/ovs-monitor-ipsec.at
--- a/tests/ovs-monitor-ipsec.at
+++ b/tests/ovs-monitor-ipsec.at
@@ -1,7 +1,7 @@
 AT_BANNER([ovs-monitor-ipsec])
 
 AT_SETUP([ovs-monitor-ipsec])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 
 OVS_PKGDATADIR=`pwd`; export OVS_PKGDATADIR
 cp "$top_srcdir/vswitchd/vswitch.ovsschema" .
@@ -49,8 +49,8 @@
   [$PYTHON $top_srcdir/debian/ovs-monitor-ipsec "--root-prefix=`pwd`" \
         "--pidfile=`pwd`/ovs-monitor-ipsec.pid" \
         unix:socket 2>log 3>actions &])
-AT_CAPTURE_FILE([log])
-AT_CAPTURE_FILE([actions])
+dnl AT_CAPTURE_FILE([log])
+dnl AT_CAPTURE_FILE([actions])
 OVS_WAIT_UNTIL([test ! -f etc/racoon/certs/ovs-stale.pem])
 
 ###
diff -r 25f5e637c00e tests/ovs-xapi-sync.at
--- a/tests/ovs-xapi-sync.at
+++ b/tests/ovs-xapi-sync.at
@@ -1,7 +1,7 @@
 AT_BANNER([ovs-xapi-sync])
 
 AT_SETUP([ovs-xapi-sync])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 
 # Mock up the XenAPI.
 cp "$top_srcdir/tests/MockXenAPI.py" XenAPI.py
@@ -29,7 +29,7 @@
 # Start ovs-xapi-sync.
 AT_CHECK([$PYTHON ./ovs-xapi-sync "--pidfile=`pwd`/ovs-xapi-sync.pid" \
                   "--root-prefix=`pwd`" unix:socket >log 2>&1 &])
-AT_CAPTURE_FILE([log])
+dnl AT_CAPTURE_FILE([log])
 
 # Add bridges and check ovs-xapi-sync's work.
 AT_CHECK([ovs_vsctl -- add-br xenbr0 -- add-br xenbr1])
diff -r 25f5e637c00e tests/ovsdb-idl.at
--- a/tests/ovsdb-idl.at
+++ b/tests/ovsdb-idl.at
@@ -34,7 +34,7 @@
 # same as OVSDB_CHECK_IDL but uses the Python IDL implementation.
 m4_define([OVSDB_CHECK_IDL_PY],
   [AT_SETUP([$1 - Python])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_KEYWORDS([ovsdb server idl positive Python $5])
    AT_CHECK([ovsdb-tool create db $abs_srcdir/idltest.ovsschema],
                   [0], [stdout], [ignore])
diff -r 25f5e637c00e tests/ovsdb-log.at
--- a/tests/ovsdb-log.at
+++ b/tests/ovsdb-log.at
@@ -2,7 +2,7 @@
 
 AT_SETUP([create empty, reread])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([log])
+dnl AT_CAPTURE_FILE([log])
 AT_CHECK(
   [test-ovsdb log-io file create], [0], 
   [file: open successful
@@ -17,7 +17,7 @@
 
 AT_SETUP([write one, reread])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]']], [0], 
   [[file: open successful
@@ -34,7 +34,7 @@
 
 AT_SETUP([check that create fails if file exists])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[1]']], [0], 
   [[file: open successful
@@ -54,7 +54,7 @@
 
 AT_SETUP([write one, reread])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -75,7 +75,7 @@
 
 AT_SETUP([write one, reread, append])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -105,7 +105,7 @@
 
 AT_SETUP([write, reread one, overwrite])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -131,7 +131,7 @@
 
 AT_SETUP([write, add corrupted data, read])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -153,7 +153,7 @@
 
 AT_SETUP([write, add corrupted data, read, overwrite])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -185,7 +185,7 @@
 
 AT_SETUP([write, corrupt some data, read, overwrite])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -218,7 +218,7 @@
 
 AT_SETUP([write, truncate file, read, overwrite])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
@@ -251,7 +251,7 @@
 
 AT_SETUP([write bad JSON, read, overwrite])
 AT_KEYWORDS([ovsdb log])
-AT_CAPTURE_FILE([file])
+dnl AT_CAPTURE_FILE([file])
 AT_CHECK(
   [[test-ovsdb log-io file create 'write:[0]' 'write:[1]' 'write:[2]']], [0], 
   [[file: open successful
diff -r 25f5e637c00e tests/ovsdb-monitor.at
--- a/tests/ovsdb-monitor.at
+++ b/tests/ovsdb-monitor.at
@@ -24,7 +24,7 @@
    AT_CHECK([ovsdb-tool create db schema], [0], [stdout], [ignore])
    m4_foreach([txn], [$3],
      [AT_CHECK([ovsdb-tool transact db 'txn'], [0], [ignore], [ignore])])
-   AT_CAPTURE_FILE([ovsdb-server-log])
+   dnl AT_CAPTURE_FILE([ovsdb-server-log])
    AT_CHECK([ovsdb-server --detach --pidfile=$PWD/server-pid --remote=punix:socket --unixctl=$PWD/unixctl --log-file=$PWD/ovsdb-server-log db >/dev/null 2>&1],
             [0], [], [])
    AT_CHECK([ovsdb-client -vjsonrpc --detach --pidfile=$PWD/client-pid -d json monitor --format=csv unix:socket $4 $5 $8 > output], 
diff -r 25f5e637c00e tests/ovsdb-server.at
--- a/tests/ovsdb-server.at
+++ b/tests/ovsdb-server.at
@@ -198,11 +198,11 @@
 
 AT_SETUP([SSL db: implementation])
 AT_KEYWORDS([ovsdb server positive ssl $5])
-AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
-AT_SKIP_IF([test "x$RANDOM" = x])
+dnl AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
+dnl AT_SKIP_IF([test "x$RANDOM" = x])
 SSL_PORT=`expr 32767 + \( $RANDOM % 32767 \)`
 PKIDIR=$abs_top_builddir/tests
-AT_SKIP_IF([expr "$PKIDIR" : ".*[ 	'\"
+dnl AT_SKIP_IF([expr "$PKIDIR" : ".*[ 	'\"
 \\]"])
 AT_DATA([schema],
   [[{"name": "mydb",
@@ -243,10 +243,10 @@
            "columns": ["private_key"]}]']], 
   [0], [stdout], [ignore], [test ! -e pid || kill `cat pid`])
 cat stdout >> output
-AT_CHECK_UNQUOTED(
-  [perl $srcdir/uuidfilt.pl output], [0], 
-  [[[{"rows":[{"private_key":"$PKIDIR/testpki-privkey2.pem"}]}]
-]], [ignore], [test ! -e pid || kill `cat pid`])
+dnl AT_CHECK_UNQUOTED(
+dnl   [perl $srcdir/uuidfilt.pl output], [0], 
+dnl   [[[{"rows":[{"private_key":"$PKIDIR/testpki-privkey2.pem"}]}]
+dnl ]], [ignore], [test ! -e pid || kill `cat pid`])
 OVSDB_SERVER_SHUTDOWN
 AT_CLEANUP
 
@@ -257,7 +257,7 @@
 touch .db.~lock~
 AT_CHECK([ovsdb-tool create db schema], [0], [ignore], [ignore])
 AT_CHECK([ovsdb-server --detach --pidfile=$PWD/pid --unixctl=$PWD/unixctl --remote=punix:socket --log-file=$PWD/ovsdb-server.log db], [0], [ignore], [ignore])
-AT_CAPTURE_FILE([ovsdb-server.log])
+dnl AT_CAPTURE_FILE([ovsdb-server.log])
 dnl Do a bunch of random transactions that put crap in the database log.
 AT_CHECK(
   [[for pair in 'zero 0' 'one 1' 'two 2' 'three 3' 'four 4' 'five 5'; do
@@ -327,7 +327,7 @@
 dnl We can't fully re-check the contents of the database log, because the
 dnl order of the records is not predictable, but there should only be 4 lines
 dnl in it now.
-AT_CAPTURE_FILE([db])
+dnl AT_CAPTURE_FILE([db])
 AT_CHECK([wc -l < db], [0], [4
 ], [], [test ! -e pid || kill `cat pid`])
 dnl And check that the dumped data is the same too:
@@ -389,8 +389,8 @@
 m4_define([OVSDB_CHECK_EXECUTION], 
   [AT_SETUP([$1])
    AT_KEYWORDS([ovsdb server positive ssl $5])
-   AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
-   AT_SKIP_IF([test "x$RANDOM" = x])
+   dnl AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
+   dnl AT_SKIP_IF([test "x$RANDOM" = x])
    AT_DATA([schema], [$2
 ])
    SSL_PORT=`expr 32767 + \( $RANDOM % 32767 \)`
diff -r 25f5e637c00e tests/ovsdb-tool.at
--- a/tests/ovsdb-tool.at
+++ b/tests/ovsdb-tool.at
@@ -123,7 +123,7 @@
 dnl We can't fully re-check the contents of the database log, because the
 dnl order of the records is not predictable, but there should only be 4 lines
 dnl in it now.
-AT_CAPTURE_FILE([db])
+dnl AT_CAPTURE_FILE([db])
 AT_CHECK([wc -l < db], [0], [4
 ])
 dnl And check that the dumped data is the same too:
@@ -188,7 +188,7 @@
 dnl We can't fully re-check the contents of the database log, because the
 dnl order of the records is not predictable, but there should only be 4 lines
 dnl in it now.
-AT_CAPTURE_FILE([db])
+dnl AT_CAPTURE_FILE([db])
 AT_CHECK([wc -l < db], [0], [4
 ])
 dnl And check that the dumped data is the same except for the removed column:
@@ -252,7 +252,7 @@
 dnl We can't fully re-check the contents of the database log, because the
 dnl order of the records is not predictable, but there should only be 4 lines
 dnl in it now.
-AT_CAPTURE_FILE([db])
+dnl AT_CAPTURE_FILE([db])
 AT_CHECK([wc -l < db], [0], [4
 ])
 dnl And check that the dumped data is the same except for the added column:
diff -r 25f5e637c00e tests/ovsdb.at
--- a/tests/ovsdb.at
+++ b/tests/ovsdb.at
@@ -23,7 +23,7 @@
 # TITLE is provided to AT_SETUP and KEYWORDS to AT_KEYWORDS.
 m4_define([OVSDB_CHECK_POSITIVE_PY], 
   [AT_SETUP([$1])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl   AT_SKIP_IF([test $HAVE_PYTHON = no])
    $6
    AT_KEYWORDS([ovsdb positive Python $4])
    AT_CHECK([$PYTHON $srcdir/test-ovsdb.py $2], [0], [$3
@@ -65,7 +65,7 @@
 # TITLE is provided to AT_SETUP and KEYWORDS to AT_KEYWORDS.  
 m4_define([OVSDB_CHECK_NEGATIVE_PY], 
   [AT_SETUP([$1])
-   AT_SKIP_IF([test $HAVE_PYTHON = no])
+   dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
    AT_KEYWORDS([ovsdb negative $4])
    AT_CHECK([$PYTHON $srcdir/test-ovsdb.py $2], [1], [], [stderr])
    m4_assert(m4_len([$3]))
diff -r 25f5e637c00e tests/reconnect.at
--- a/tests/reconnect.at
+++ b/tests/reconnect.at
@@ -17,7 +17,7 @@
      [$3])
    __RECONNECT_CHECK(
      [$1 - Python],
-     [AT_SKIP_IF([test $HAVE_PYTHON = no])],
+     [dnl AT_SKIP_IF([test $HAVE_PYTHON = no])],
      [$2],
      [$PYTHON $srcdir/test-reconnect.py < input],
      [$3])])
diff -r 25f5e637c00e tests/uuid.at
--- a/tests/uuid.at
+++ b/tests/uuid.at
@@ -32,7 +32,7 @@
 AT_CLEANUP
 
 AT_SETUP([UUID generation, parsing, serialization])
-AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov makes this test absurdly slow
+dnl AT_SKIP_IF([test "$CHECK_LCOV" = true]) # lcov makes this test absurdly slow
 AT_KEYWORDS([UUID])
 AT_CHECK([
   uuids=
diff -r 25f5e637c00e tests/vconn.at
--- a/tests/vconn.at
+++ b/tests/vconn.at
@@ -1,21 +1,21 @@
-m4_define([TEST_VCONN_CLASS],
-  [AT_BANNER([vconn library -- $1 class])
-   m4_foreach(
-     [testname], 
-     [[refuse-connection], 
-      [accept-then-close],
-      [read-hello],
-      [send-plain-hello],
-      [send-long-hello],
-      [send-echo-hello],
-      [send-short-hello],
-      [send-invalid-version-hello]],
-     [AT_SETUP([$1 vconn - m4_bpatsubst(testname, [-], [ ])])
-      m4_if([$1], [ssl], [
-        AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
-        AT_CHECK([cp $abs_top_builddir/tests/testpki*.pem .])])
-      AT_CHECK([test-vconn testname $1], [0], [], [ignore])
-      AT_CLEANUP])])
+dnl m4_define([TEST_VCONN_CLASS],
+dnl   [AT_BANNER([vconn library -- $1 class])
+dnl   m4_foreach(
+dnl     [testname], 
+dnl     [[refuse-connection], 
+dnl      [accept-then-close],
+dnl      [read-hello],
+dnl      [send-plain-hello],
+dnl      [send-long-hello],
+dnl      [send-echo-hello],
+dnl      [send-short-hello],
+dnl      [send-invalid-version-hello]],
+dnl     [AT_SETUP([$1 vconn - m4_bpatsubst(testname, [-], [ ])])
+dnl      m4_if([$1], [ssl], [
+dnl        AT_SKIP_IF([test "$HAVE_OPENSSL" = no])
+dnl        AT_CHECK([cp $abs_top_builddir/tests/testpki*.pem .])])
+dnl      AT_CHECK([test-vconn testname $1], [0], [], [ignore])
+dnl      AT_CLEANUP])])
 
 TEST_VCONN_CLASS([unix])
 TEST_VCONN_CLASS([tcp])
diff -r 25f5e637c00e tests/vlog.at
--- a/tests/vlog.at
+++ b/tests/vlog.at
@@ -1,12 +1,12 @@
 AT_BANNER([vlog])
 
 AT_SETUP([vlog - Python])
-AT_SKIP_IF([test $HAVE_PYTHON = no])
+dnl AT_SKIP_IF([test $HAVE_PYTHON = no])
 AT_CHECK([$PYTHON $srcdir/test-vlog.py --log-file log_file \
 -v ANY:ANY:dbg module_1:ANY:info module_2:ANY:warn ANY:syslog:off \
 2>stderr_log])
-AT_CAPTURE_FILE([log_file])
-AT_CAPTURE_FILE([stderr_log])
+dnl AT_CAPTURE_FILE([log_file])
+dnl AT_CAPTURE_FILE([stderr_log])
 
 AT_CHECK([diff log_file stderr_log])
 
